/*
 * Phoenix-RTOS
 *
 * Operating system kernel
 *
 * Peripheral register definitions for STM32N6 platform
 * Based on RM0486 STM32N647/657xx Reference manual by STMicroelectronics
 *
 * Copyright 2025 Phoenix Systems
 * Author: Jacek Maksymowicz
 *
 * This file is part of Phoenix-RTOS.
 *
 * %LICENSE%
 */

#ifndef _STM32N6_REGS_H_
#define _STM32N6_REGS_H_

enum rcc_regs {
	rcc_cr = 0x0,
	rcc_sr,
	rcc_stopcr,
	rcc_cfgr1 = 0x8,
	rcc_cfgr2,
	rcc_ckprotr,
	rcc_bdcr,
	rcc_hwrsr,
	rcc_rsr,
	rcc_lsecfgr = 0x10,
	rcc_msicfgr,
	rcc_hsicfgr,
	rcc_hsimcr,
	rcc_hsimsr,
	rcc_hsecfgr,
	rcc_pll1cfgr1 = 0x20,
	rcc_pll1cfgr2,
	rcc_pll1cfgr3,
	rcc_pll2cfgr1 = 0x24,
	rcc_pll2cfgr2,
	rcc_pll2cfgr3,
	rcc_pll3cfgr1 = 0x28,
	rcc_pll3cfgr2,
	rcc_pll3cfgr3,
	rcc_pll4cfgr1 = 0x2c,
	rcc_pll4cfgr2,
	rcc_pll4cfgr3,
	rcc_ic1cfgr = 0x31,
	rcc_ic2cfgr,
	rcc_ic3cfgr,
	rcc_ic4cfgr,
	rcc_ic5cfgr,
	rcc_ic6cfgr,
	rcc_ic7cfgr,
	rcc_ic8cfgr,
	rcc_ic9cfgr,
	rcc_ic10cfgr,
	rcc_ic11cfgr,
	rcc_ic12cfgr,
	rcc_ic13cfgr,
	rcc_ic14cfgr,
	rcc_ic15cfgr,
	rcc_ic16cfgr,
	rcc_ic17cfgr,
	rcc_ic18cfgr,
	rcc_ic19cfgr,
	rcc_ic20cfgr,
	rcc_cier = 0x49,
	rcc_cifr,
	rcc_cicr,
	rcc_ccipr1 = 0x51,
	rcc_ccipr2,
	rcc_ccipr3,
	rcc_ccipr4,
	rcc_ccipr5,
	rcc_ccipr6,
	rcc_ccipr7,
	rcc_ccipr8,
	rcc_ccipr9,
	rcc_ccipr12 = 0x5c,
	rcc_ccipr13,
	rcc_ccipr14,
	rcc_busrstr = 0x81,
	rcc_miscrstr,
	rcc_memrstr,
	rcc_ahb1rstr,
	rcc_ahb2rstr,
	rcc_ahb3rstr,
	rcc_ahb4rstr,
	rcc_ahb5rstr,
	rcc_apb1lrstr,
	rcc_apb1hrstr,
	rcc_apb2rstr,
	rcc_apb4lrstr = 0x8d,
	rcc_apb4hrstr,
	rcc_apb5rstr,
	rcc_divenr,
	rcc_busenr,
	rcc_miscenr,
	rcc_memenr,
	rcc_ahb1enr,
	rcc_ahb2enr,
	rcc_ahb3enr,
	rcc_ahb4enr,
	rcc_ahb5enr,
	rcc_apb1lenr,
	rcc_apb1henr,
	rcc_apb2enr,
	rcc_apb3enr,
	rcc_apb4lenr,
	rcc_apb4henr,
	rcc_apb5enr,
	rcc_divlpenr,
	rcc_buslpenr,
	rcc_misclpenr,
	rcc_memlpenr,
	rcc_ahb1lpenr,
	rcc_ahb2lpenr,
	rcc_ahb3lpenr,
	rcc_ahb4lpenr,
	rcc_ahb5lpenr,
	rcc_apb1llpenr,
	rcc_apb1hlpenr,
	rcc_apb2lpenr,
	rcc_apb3lpenr,
	rcc_apb4llpenr,
	rcc_apb4hlpenr,
	rcc_apb5lpenr,
	rcc_rdcr = 0x113,
	rcc_seccfgr0 = 0x1e0,
	rcc_privcfgr0,
	rcc_lockcfgr0,
	rcc_pubcfgr0,
	rcc_seccfgr1,
	rcc_privcfgr1,
	rcc_lockcfgr1,
	rcc_pubcfgr1,
	rcc_seccfgr2,
	rcc_privcfgr2,
	rcc_lockcfgr2,
	rcc_pubcfgr2,
	rcc_seccfgr3,
	rcc_privcfgr3,
	rcc_lockcfgr3,
	rcc_pubcfgr3,
	rcc_seccfgr4,
	rcc_privcfgr4,
	rcc_lockcfgr4,
	rcc_pubcfgr4,
	rcc_pubcfgr5,
	rcc_csr = 0x200,
	rcc_stopcsr = 0x202,
	rcc_busrstsr = 0x281,
	rcc_miscrstsr,
	rcc_memrstsr,
	rcc_ahb1rstsr,
	rcc_ahb2rstsr,
	rcc_ahb3rstsr,
	rcc_ahb4rstsr,
	rcc_ahb5rstsr,
	rcc_apb1lrstsr,
	rcc_apb1hrstsr,
	rcc_apb2rstsr,
	rcc_apb4lrstsr = 0x28d,
	rcc_apb4hrstsr,
	rcc_apb5rstsr,
	rcc_divensr,
	rcc_busensr,
	rcc_miscensr,
	rcc_memensr,
	rcc_ahb1ensr,
	rcc_ahb2ensr,
	rcc_ahb3ensr,
	rcc_ahb4ensr,
	rcc_ahb5ensr,
	rcc_apb1lensr,
	rcc_apb1hensr,
	rcc_apb2ensr,
	rcc_apb3ensr,
	rcc_apb4lensr,
	rcc_apb4hensr,
	rcc_apb5ensr,
	rcc_divlpensr,
	rcc_buslpensr,
	rcc_misclpensr,
	rcc_memlpensr,
	rcc_ahb1lpensr,
	rcc_ahb2lpensr,
	rcc_ahb3lpensr,
	rcc_ahb4lpensr,
	rcc_ahb5lpensr,
	rcc_apb1llpensr,
	rcc_apb1hlpensr,
	rcc_apb2lpensr,
	rcc_apb3lpensr,
	rcc_apb4llpensr,
	rcc_apb4hlpensr,
	rcc_apb5lpensr,
	rcc_privcfgsr0 = 0x3e1,
	rcc_pubcfgsr0 = 0x3e3,
	rcc_privcfgsr1 = 0x3e5,
	rcc_pubcfgsr1 = 0x3e7,
	rcc_privcfgsr2 = 0x3e9,
	rcc_pubcfgsr2 = 0x3eb,
	rcc_seccfgsr3,
	rcc_privcfgsr3,
	rcc_lockcfgsr3,
	rcc_pubcfgsr3,
	rcc_privcfgsr4 = 0x3f1,
	rcc_pubcfgsr4 = 0x3f3,
	rcc_pubcfgsr5,
	rcc_ccr = 0x400,
	rcc_stopccr = 0x402,
	rcc_busrstcr = 0x481,
	rcc_miscrstcr,
	rcc_memrstcr,
	rcc_ahb1rstcr,
	rcc_ahb2rstcr,
	rcc_ahb3rstcr,
	rcc_ahb4rstcr,
	rcc_ahb5rstcr,
	rcc_apb1lrstcr,
	rcc_apb1hrstcr,
	rcc_apb2rstcr,
	rcc_apb4lrstcr = 0x48d,
	rcc_apb4hrstcr,
	rcc_apb5rstcr,
	rcc_divencr,
	rcc_busencr,
	rcc_miscencr,
	rcc_memencr,
	rcc_ahb1encr,
	rcc_ahb2encr,
	rcc_ahb3encr,
	rcc_ahb4encr,
	rcc_ahb5encr,
	rcc_apb1lencr,
	rcc_apb1hencr,
	rcc_apb2encr,
	rcc_apb3encr,
	rcc_apb4lencr,
	rcc_apb4hencr,
	rcc_apb5encr,
	rcc_divlpencr,
	rcc_buslpencr,
	rcc_misclpencr,
	rcc_memlpencr,
	rcc_ahb1lpencr,
	rcc_ahb2lpencr,
	rcc_ahb3lpencr,
	rcc_ahb4lpencr,
	rcc_ahb5lpencr,
	rcc_apb1llpencr,
	rcc_apb1hlpencr,
	rcc_apb2lpencr,
	rcc_apb3lpencr,
	rcc_apb4llpencr,
	rcc_apb4hlpencr,
	rcc_apb5lpencr,
	rcc_privcfgcr0 = 0x5e1,
	rcc_pubcfgcr0 = 0x5e3,
	rcc_privcfgcr1 = 0x5e5,
	rcc_pubcfgcr1 = 0x5e7,
	rcc_privcfgcr2 = 0x5e9,
	rcc_pubcfgcr2 = 0x5eb,
	rcc_privcfgcr3 = 0x5ed,
	rcc_pubcfgcr3 = 0x5ef,
	rcc_privcfgcr4 = 0x5f1,
	rcc_pubcfgcr4 = 0x5f3,
	rcc_pubcfgcr5,
};

enum gpio_regs {
	gpio_moder = 0x0,
	gpio_otyper,
	gpio_ospeedr,
	gpio_pupdr,
	gpio_idr,
	gpio_odr,
	gpio_bsrr,
	gpio_lckr,
	gpio_afrl,
	gpio_afrh,
	gpio_brr,
	gpio_seccfgr = 0xc,
	gpio_privcfgr,
	gpio_rcfglockr,
	gpio_delayrl = 0x10,
	gpio_delayrh,
	gpio_advcfgrl,
	gpio_advcfgrh,
};

enum pwr_regs {
	pwr_cr1 = 0x0,
	pwr_cr2,
	pwr_cr3,
	pwr_cr4,
	pwr_voscr = 0x8,
	pwr_bdcr1,
	pwr_bdcr2,
	pwr_dbpcr,
	pwr_cpucr,
	pwr_svmcr1,
	pwr_svmcr2,
	pwr_svmcr3,
	pwr_wkupcr = 0x14,
	pwr_wkupsr,
	pwr_wkupepr,
	pwr_seccfgr = 0x1c,
	pwr_privcfgr,
};

enum rtc_regs {
	rtc_tr = 0x0,
	rtc_dr,
	rtc_ssr,
	rtc_icsr,
	rtc_prer,
	rtc_wutr,
	rtc_cr,
	rtc_privcfgr,
	rtc_seccfgr,
	rtc_wpr,
	rtc_calr,
	rtc_shiftr,
	rtc_tstr,
	rtc_tsdr,
	rtc_tsssr,
	rtc_alrmar = 0x10,
	rtc_alrmassr,
	rtc_alrmbr,
	rtc_alrmbssr,
	rtc_sr,
	rtc_misr,
	rtc_smisr,
	rtc_scr,
	rtc_alrabinr = 0x1c,
	rtc_alrbbinr,
};

enum iwdg_regs {
	iwdg_kr = 0x0,
	iwdg_pr,
	iwdg_rlr,
	iwdg_sr,
	iwdg_winr,
	iwdg_ewcr,
	iwdg_icr,
};

enum syscfg_regs {
	syscfg_bootcr = 0x0,
	syscfg_cm55cr,
	syscfg_cm55tcmcr,
	syscfg_cm55rwmcr,
	syscfg_initsvtorcr,
	syscfg_initnsvtorcr,
	syscfg_cm55rstcr,
	syscfg_cm55pahbwpr,
	syscfg_vencramcr,
	syscfg_pottamprstcr,
	syscfg_icnewrcr = 0xd,
	syscfg_icncgcr,
	syscfg_icnbwrcr,
	syscfg_iocr,
	syscfg_vddio1cccr,
	syscfg_vddio1ccsr,
	syscfg_vddio2cccr,
	syscfg_vddio2ccsr,
	syscfg_vddio3cccr,
	syscfg_vddio3ccsr,
	syscfg_vddio4cccr,
	syscfg_vddio4ccsr,
	syscfg_vddiocccr,
	syscfg_vddioccsr,
	syscfg_cbr,
	syscfg_sec_aidcr,
	syscfg_fmc_retimecr,
	syscfg_npu_icncr,
	syscfg_bootsr = 0x40,
	syscfg_ahbwp_error_sr,
	syscfg_smpshdpcr = 0x100,
	syscfg_nonsec_aidcr = 0x200,
};

enum exti_regs {
	exti_rtsr1 = 0x0,
	exti_ftsr1,
	exti_swier1,
	exti_rpr1,
	exti_fpr1,
	exti_seccfgr1,
	exti_privcfgr1,
	exti_rtsr2 = 0x8,
	exti_ftsr2,
	exti_swier2,
	exti_rpr2,
	exti_fpr2,
	exti_seccfgr2,
	exti_privcfgr2,
	exti_rtsr3 = 0x10,
	exti_ftsr3,
	exti_swier3,
	exti_rpr3,
	exti_fpr3,
	exti_seccfgr3,
	exti_privcfgr3,
	exti_exticr1 = 0x18,
	exti_exticr2,
	exti_exticr3,
	exti_exticr4,
	exti_lockr,
	exti_imr1 = 0x20,
	exti_emr1,
	exti_imr2 = 0x24,
	exti_emr2,
	exti_imr3 = 0x28,
	exti_emr3,
};

enum bsec_regs {
	bsec_fvr0 = 0x0,
	bsec_splock0 = 0x200,
	bsec_swlock0 = 0x210,
	bsec_srlock0 = 0x220,
	bsec_otpvldr0 = 0x230,
	bsec_sfsr0 = 0x250,
	bsec_otpcr = 0x301,
	bsec_wdr,
	bsec_scratchr0 = 0x380,
	bsec_scratchr1,
	bsec_scratchr2,
	bsec_scratchr3,
	bsec_lockr,
	bsec_jtaginr,
	bsec_jtagoutr,
	bsec_unmapr = 0x389,
	bsec_sr = 0x390,
	bsec_otpsr,
	bsec_epochr0 = 0x3a0,
	bsec_epochr1,
	bsec_epoch_selr,
	bsec_dbgcr,
	bsec_ap_unlock,
	bsec_hdplsr,
	bsec_hdplcr,
	bsec_nextlr,
	bsec_woscr0 = 0x3d0,
	bsec_hrcr = 0x3fa,
	bsec_wrcr,
};

enum rifsc_regs {
	rifsc_risc_cr = 0x0,
	rifsc_risc_seccfgr0 = 0x4,
	rifsc_risc_privcfgr0 = 0xc,
	rifsc_risc_rcfglockr0 = 0x14,
	rifsc_rimc_cr = 0x300,
	rifsc_rimc_attr0 = 0x304,
	rifsc_ppsr0 = 0x3ec,
};

enum gpdma_regs {
	gpdma_seccfgr = 0x0,
	gpdma_privcfgr,
	gpdma_rcfglockr,
	gpdma_misr,
	gpdma_smisr,
};

enum risaf_regs {
	risaf_cr = 0x0,
	risaf_iasr = 0x2,
	risaf_iacr,
	risaf_iaesr = 0x8,
	risaf_iaddr,
	risaf_reg1_cfgr = 0x10,
	risaf_reg1_startr,
	risaf_reg1_endr,
	risaf_reg1_cidcfgr,
	risaf_reg1_acfgr,
	risaf_reg1_astartr,
	risaf_reg1_aendr,
	risaf_reg1_anestr,
	risaf_reg1_bcfgr,
	risaf_reg1_bstartr,
	risaf_reg1_bendr,
	risaf_reg1_bnestr,
};

#endif /* _STM32N6_REGS_H_ */
