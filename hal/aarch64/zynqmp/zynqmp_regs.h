/*
 * Phoenix-RTOS
 *
 * Operating system kernel
 *
 * ZynqMP register definitions
 * based on: Zynq UltraScale+ Devices Register Reference UG1087 (v1.9)
 *
 * Copyright 2024 Phoenix Systems
 * Author: Jacek Maksymowicz
 *
 * This file is part of Phoenix-RTOS.
 *
 * %LICENSE%
 */

#ifndef _ZYNQMP_REGS_H_
#define _ZYNQMP_REGS_H_

enum {
	iou_slcr_mio_pin_0 = 0x0,    /* 78 registers */
	iou_slcr_bank0_ctrl0 = 0x4e, /* 6 registers */
	iou_slcr_bank0_status = 0x54,
	iou_slcr_bank1_ctrl0, /* 6 registers */
	iou_slcr_bank1_status = 0x5b,
	iou_slcr_bank2_ctrl0, /* 6 registers */
	iou_slcr_bank2_status = 0x62,
	iou_slcr_mio_loopback = 0x80,
	iou_slcr_mio_mst_tri0, /* 3 registers */
	iou_slcr_wdt_clk_sel = 0xc0,
	iou_slcr_can_mio_ctrl,
	iou_slcr_gem_clk_ctrl,
	iou_slcr_sdio_clk_ctrl,
	iou_slcr_ctrl_reg_sd,
	iou_slcr_sd_itapdly,
	iou_slcr_sd_otapdlysel,
	iou_slcr_sd_config_reg1,
	iou_slcr_sd_config_reg2,
	iou_slcr_sd_config_reg3,
	iou_slcr_sd_initpreset,
	iou_slcr_sd_dsppreset,
	iou_slcr_sd_hspdpreset,
	iou_slcr_sd_sdr12preset,
	iou_slcr_sd_sdr25preset,
	iou_slcr_sd_sdr50prset,
	iou_slcr_sd_sdr104prst,
	iou_slcr_sd_ddr50preset,
	iou_slcr_sd_maxcur1p8 = 0xd3,
	iou_slcr_sd_maxcur3p0,
	iou_slcr_sd_maxcur3p1,
	iou_slcr_sd_dll_ctrl,
	iou_slcr_sd_cdn_ctrl,
	iou_slcr_gem_ctrl,
	iou_slcr_iou_ttc_apb_clk = 0xe0,
	iou_slcr_iou_tapdly_bypass = 0xe4,
	iou_slcr_iou_coherent_ctrl = 0x100,
	iou_slcr_video_pss_clk_sel,
	iou_slcr_iou_interconnect_route,
	iou_slcr_ctrl = 0x180,
	iou_slcr_isr = 0x1c0,
	iou_slcr_imr,
	iou_slcr_ier,
	iou_slcr_idr,
	iou_slcr_itr,
};

enum {
	apu_err_ctrl = 0x0,
	apu_isr = 0x4,
	apu_imr,
	apu_ien,
	apu_ids,
	apu_config_0,
	apu_config_1,
	apu_rvbaraddr0l = 0x10,
	apu_rvbaraddr0h,
	apu_rvbaraddr1l,
	apu_rvbaraddr1h,
	apu_rvbaraddr2l,
	apu_rvbaraddr2h,
	apu_rvbaraddr3l,
	apu_rvbaraddr3h,
	apu_ace_ctrl,
	apu_snoop_ctrl = 0x20,
	apu_pwrctl = 0x24,
	apu_pwrstat,
};

enum {
	crf_apb_err_ctrl = 0x0,
	crf_apb_ir_status,
	crf_apb_ir_mask,
	crf_apb_ir_enable,
	crf_apb_ir_disable,
	crf_apb_crf_wprot = 0x7,
	crf_apb_apll_ctrl,
	crf_apb_apll_cfg,
	crf_apb_apll_frac_cfg,
	crf_apb_dpll_ctrl,
	crf_apb_dpll_cfg,
	crf_apb_dpll_frac_cfg,
	crf_apb_vpll_ctrl,
	crf_apb_vpll_cfg,
	crf_apb_vpll_frac_cfg,
	crf_apb_pll_status,
	crf_apb_apll_to_lpd_ctrl,
	crf_apb_dpll_to_lpd_ctrl,
	crf_apb_vpll_to_lpd_ctrl,
	crf_apb_acpu_ctrl = 0x18,
	crf_apb_dbg_trace_ctrl,
	crf_apb_dbg_fpd_ctrl,
	crf_apb_dp_video_ref_ctrl = 0x1c,
	crf_apb_dp_audio_ref_ctrl,
	crf_apb_dp_stc_ref_ctrl = 0x1f,
	crf_apb_ddr_ctrl,
	crf_apb_gpu_ref_ctrl,
	crf_apb_sata_ref_ctrl = 0x28,
	crf_apb_pcie_ref_ctrl = 0x2d,
	crf_apb_fpd_dma_ref_ctrl,
	crf_apb_dpdma_ref_ctrl,
	crf_apb_topsw_main_ctrl,
	crf_apb_topsw_lsbus_ctrl,
	crf_apb_dbg_tstmp_ctrl = 0x3e,
	crf_apb_rst_fpd_top = 0x40,
	crf_apb_rst_fpd_apu,
	crf_apb_rst_ddr_ss,
};

enum {
	crl_apb_err_ctrl = 0x0,
	crl_apb_ir_status,
	crl_apb_ir_mask,
	crl_apb_ir_enable,
	crl_apb_ir_disable,
	crl_apb_crl_wprot = 0x7,
	crl_apb_iopll_ctrl,
	crl_apb_iopll_cfg,
	crl_apb_iopll_frac_cfg,
	crl_apb_rpll_ctrl = 0xc,
	crl_apb_rpll_cfg,
	crl_apb_rpll_frac_cfg,
	crl_apb_pll_status = 0x10,
	crl_apb_iopll_to_fpd_ctrl,
	crl_apb_rpll_to_fpd_ctrl,
	crl_apb_usb3_dual_ref_ctrl,
	crl_apb_gem0_ref_ctrl,
	crl_apb_gem1_ref_ctrl,
	crl_apb_gem2_ref_ctrl,
	crl_apb_gem3_ref_ctrl,
	crl_apb_usb0_bus_ref_ctrl,
	crl_apb_usb1_bus_ref_ctrl,
	crl_apb_qspi_ref_ctrl,
	crl_apb_sdio0_ref_ctrl,
	crl_apb_sdio1_ref_ctrl,
	crl_apb_uart0_ref_ctrl,
	crl_apb_uart1_ref_ctrl,
	crl_apb_spi0_ref_ctrl,
	crl_apb_spi1_ref_ctrl,
	crl_apb_can0_ref_ctrl,
	crl_apb_can1_ref_ctrl,
	crl_apb_cpu_r5_ctrl = 0x24,
	crl_apb_iou_switch_ctrl = 0x27,
	crl_apb_csu_pll_ctrl,
	crl_apb_pcap_ctrl,
	crl_apb_lpd_switch_ctrl,
	crl_apb_lpd_lsbus_ctrl,
	crl_apb_dbg_lpd_ctrl,
	crl_apb_nand_ref_ctrl,
	crl_apb_lpd_dma_ref_ctrl,
	crl_apb_pl0_ref_ctrl = 0x30,
	crl_apb_pl1_ref_ctrl,
	crl_apb_pl2_ref_ctrl,
	crl_apb_pl3_ref_ctrl,
	crl_apb_pl0_thr_ctrl,
	crl_apb_pl0_thr_cnt,
	crl_apb_pl1_thr_ctrl,
	crl_apb_pl1_thr_cnt,
	crl_apb_pl2_thr_ctrl,
	crl_apb_pl2_thr_cnt,
	crl_apb_pl3_thr_ctrl,
	crl_apb_pl3_thr_cnt = 0x3f,
	crl_apb_gem_tsu_ref_ctrl,
	crl_apb_dll_ref_ctrl,
	crl_apb_pssysmon_ref_ctrl,
	crl_apb_i2c0_ref_ctrl = 0x48,
	crl_apb_i2c1_ref_ctrl,
	crl_apb_timestamp_ref_ctrl,
	crl_apb_safety_chk = 0x4c,
	crl_apb_clkmon_status = 0x50,
	crl_apb_clkmon_mask,
	crl_apb_clkmon_enable,
	crl_apb_clkmon_disable,
	crl_apb_clkmon_trigger,
	crl_apb_chkr0_clka_upper = 0x58, /* 8 banks of 4 registers */
	crl_apb_chkr0_clka_lower,
	crl_apb_chkr0_clkb_cnt,
	crl_apb_chkr0_ctrl,
	crl_apb_boot_mode_user = 0x80,
	crl_apb_boot_mode_por,
	crl_apb_reset_ctrl = 0x86,
	crl_apb_blockonly_rst,
	crl_apb_reset_reason,
	crl_apb_rst_lpd_iou0 = 0x8c,
	crl_apb_rst_lpd_iou2 = 0x8e,
	crl_apb_rst_lpd_top,
	crl_apb_rst_lpd_dbg,
	crl_apb_boot_pin_ctrl = 0x94,
	crl_apb_bank3_ctrl0 = 0x9c, /* 6 registers */
	crl_apb_bank3_status = 0xa2,
};

#endif /* _ZYNQMP_REGS_H_ */
